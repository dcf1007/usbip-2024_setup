# Check if the event is triggered by a USB. If not skip the execution
SUBSYSTEM!="usb", GOTO="usbip_exit"

# Terminate the export if device is removed. SYSTEMD_WANTS does not handle remove, so we use systemctl
# We try to stop the pseudo-service for all disconnected USB devices. As it is a pseudo-service and
# usbip@.service exists, there are no complains from systemctl.
# We end the execution of the code by GOTO to the end of the file
ACTION=="remove", ENV{DEVTYPE}=="usb_device", RUN+="/usr/bin/systemctl --no-block stop usbip@%k.service", GOTO="usbip_exit"

# ---------------------------- START DEVICE FILTERING MODE BLOCK ---------------------------- #

# ¡¡¡ATTENTION!!!: ONLY ONE OF THE MODES SHOULD BE UNCOMMENTED!

##########################################
#     Skip the following USB devices     #
##########################################
#
# Rpi integrated peripherials. Modify accordingly to your host hardware
# SMSC9512/9514 Fast Ethernet Adapter
#ATTR{idVendor}=="0424", ATTR{idProduct}=="ec00", GOTO="usbip_exit"
#
# Linux Foundation 2.0 root hub
#ATTR{idVendor}=="1d6b", ATTR{idProduct}=="0002", GOTO="usbip_exit"
#
# Other USB devices to exclude:
# Logitech, Inc. Nano Receiver
#ATTR{idVendor}=="046d", ATTR{idProduct}=="c534", GOTO="usbip_exit"

##########################################
# Include ONLY the following USB devices #
##########################################

# Brother Industries, Ltd PT-P700 P-touch Label Printer
ATTR{idVendor}=="04f9", ATTR{idProduct}=="2061", GOTO="usbip_bind"
# Alternative line compatible with remove
#ENV{PRODUCT}=="4f9/2061*", GOTO="usbip_bind"

# Skip all other USB devices
GOTO="usbip_exit"

# ----------------------------- END DEVICE FILTERING MODE BLOCK ----------------------------- #

# Trigger the export (IP binding) event for the USB device
LABEL="usbip_bind"
ACTION=="add", ENV{DEVTYPE}=="usb_device", TAG+="usbip", TAG+="systemd", ENV{SYSTEMD_WANTS}+="usbip@%k.service"

#End of the execution blocks
LABEL="usbip_exit"